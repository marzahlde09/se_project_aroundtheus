!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleDeleteCard(){this._card.remove(),this._card=null}_handleLike(){this._card.querySelector(".card__like").classList.toggle("card__like_active")}_setEventListeners(){this._card.querySelector(".card__delete").addEventListener("click",(()=>{this._handleDeleteCard()})),this._card.querySelector(".card__like").addEventListener("click",(()=>{this._handleLike()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}generateCard(){return this._card=this._getTemplate(),this._cardImageElement=this._card.querySelector(".card__image"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._card.querySelector(".card__name").textContent=this._name,this._setEventListeners(),this._card}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.name}-input-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.name}-input-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}}class s{constructor(e){this._popupSelector=e,this._popupElement=document.querySelector(this._popupSelector).closest(".popup")}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleOutsideClickClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleOutsideClickClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleOutsideClickClose=e=>{e.target.classList.contains("popup_opened")&&this.close()};setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){super(e),this.formElement=this._popupElement.querySelector(".form"),this._submitForm=t}_getInputValues(){const e=Array.from(this.formElement.querySelectorAll(".form__field")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}close(){super.close(),this.formElement.reset()}setEventListeners(){this.formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitForm(this._getInputValues())})),super.setEventListeners()}}const r=document.querySelector(".profile__edit-button"),o=document.querySelector(".profile__add-button"),i=document.forms["profile-form"].elements.name,a=document.forms["profile-form"].elements.job,l={};var c;c={formSelector:".form",inputSelector:".form__field",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__field_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(c.formSelector)).forEach((e=>{const s=new t(c,e),n=e.getAttribute("name");l[n]=s,s.enableValidation()}));const m=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__name",jobSelector:".profile__job"}),u=new n("form[name='card-form']",(e=>{d.addItem(e),u.close()}));u.setEventListeners();const _=new n("form[name='profile-form']",(e=>{m.setUserInfo(e),_.close()}));_.setEventListeners();const p=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector("img"),this._popupCaption=this._popupElement.querySelector("figcaption")}open(e){let{name:t,link:s}=e;this._popupImage.alt=t,this._popupImage.src=s,this._popupCaption.textContent=t,super.open()}}(".popup__picture");p.setEventListeners();const d=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this.container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._renderer(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const s=new e(t,".card-template",(e=>{p.open(e)})),n=s.generateCard();d.container.prepend(n)}},".gallery__cards");d.renderItems(),r.addEventListener("click",(function(){const e=m.getUserInfo();i.value=e.name,a.value=e.job,l["profile-form"].resetValidation(),_.open()})),o.addEventListener("click",(function(){l["card-form"].resetValidation(),u.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,