!function(){"use strict";class e{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._isLiked=e.isLiked,this._id=e._id,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardTrash.addEventListener("click",(()=>{this._handleDeleteClick()})),this._likeIcon.addEventListener("click",(()=>{this._handleLikeClick()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getId(){return this._id}getIsLiked(){return this._isLiked}deleteCard(){this._card.remove(),this._card=null}addLike(){this._likeIcon.classList.add("card__like_active"),this._isLiked=!0}removeLike(){this._likeIcon.classList.remove("card__like_active"),this._isLiked=!1}generateCard(){return this._card=this._getTemplate(),this._cardImageElement=this._card.querySelector(".card__image"),this._likeIcon=this._card.querySelector(".card__like"),this._cardTrash=this._card.querySelector(".card__delete"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._card.querySelector(".card__name").textContent=this._name,this._isLiked&&this._likeIcon.classList.add("card__like_active"),this._setEventListeners(),this._card}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.name}-input-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.name}-input-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}}class s{constructor(e){this._popupSelector=e,this._popupElement=document.querySelector(this._popupSelector).closest(".popup")}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleOutsideClickClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleOutsideClickClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleOutsideClickClose=e=>{e.target.classList.contains("popup_opened")&&this.close()};setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this.formElement=this._popupElement.querySelector(".form"),this._submitButton=this.formElement.querySelector(".form__submit"),this._submitForm=t,this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e=Array.from(this.formElement.querySelectorAll(".form__field")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}close(){super.close(),this.formElement.reset()}setEventListeners(){this.formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitForm(this._getInputValues())})),super.setEventListeners()}}const n=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),o=document.querySelector(".profile__picture-edit-button"),a=document.forms["profile-form"].elements.name,l=document.forms["profile-form"].elements.job,c={};var d;d={formSelector:".form",inputSelector:".form__field",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__field_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(d.formSelector)).forEach((e=>{const s=new t(d,e),r=e.getAttribute("name");c[r]=s,s.enableValidation()}));const h=new class{constructor(e){let{baseUrl:t,header:s}=e;this._baseUrl=t,this._header=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._header})}getCardInfo(){return this._request(`${this._baseUrl}/cards`,{headers:this._header})}editUserInfo(e){let{name:t,job:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._header,body:JSON.stringify({name:t,about:s})})}editProfilePicture(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})})}addNewCard(e){let{name:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._header,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._header})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._header})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._header})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",header:{authorization:"a0548a22-3cdf-48eb-9822-7e7daf1b0604","Content-Type":"application/json"}}),_=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}setAvatar(e){this._avatar.src=e}}({nameSelector:".profile__name",jobSelector:".profile__job",avatarSelector:".profile__picture"}),u=new r("form[name='avatar-form']",(e=>{u.renderLoading(!0),h.editProfilePicture(e.link).then((()=>{_.setAvatar(e.link),u.close()})).catch((e=>console.error(e))).finally((()=>{u.renderLoading(!1)}))}));u.setEventListeners();const m=new r("form[name='card-form']",(e=>{m.renderLoading(!0),h.addNewCard({name:e.name,link:e.link}).then((e=>{v.prependItem(e),m.close()})).catch((e=>console.error(e))).finally((()=>{m.renderLoading(!1)}))}));m.setEventListeners();const p=new r("form[name='profile-form']",(e=>{p.renderLoading(!0),h.editUserInfo({name:e.name,job:e.job}).then((()=>{_.setUserInfo({name:e.name,about:e.job}),p.close()})).catch((e=>console.error(e))).finally((()=>{p.renderLoading(!1)}))}));p.setEventListeners();const f=new class extends s{constructor(e){super(e),this.formElement=this._popupElement.querySelector(".form")}setSubmitAction(e){this._handleSubmitCallback=e}setEventListeners(){this.formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()})),super.setEventListeners()}}("form[name='delete-form']");f.setEventListeners();const E=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector("img"),this._popupCaption=this._popupElement.querySelector("figcaption")}open(e){let{name:t,link:s}=e;this._popupImage.alt=t,this._popupImage.src=s,this._popupCaption.textContent=t,super.open()}}(".popup__picture");E.setEventListeners();const v=new class{constructor(e,t){this._renderer=e,this.container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.appendItem(e)}))}appendItem(e){const t=this._renderer(e);this.container.append(t)}prependItem(e){const t=this._renderer(e);this.container.prepend(t)}setItems(e){this._items=e}}((t=>{const s=new e(t,".card-template",(e=>{E.open({name:e.name,link:e.link})}),(()=>{f.setSubmitAction((()=>{h.deleteCard(t._id).then((()=>{s.deleteCard(),f.close()})).catch((e=>console.error(e)))})),f.open()}),(()=>{s.getIsLiked()?h.removeLike(s.getId()).then((()=>{s.removeLike()})).catch((e=>console.error(e))):h.addLike(s.getId()).then((()=>{s.addLike()})).catch((e=>console.error(e)))}));return s.generateCard()}),".gallery__cards");n.addEventListener("click",(function(){const e=_.getUserInfo();a.value=e.name,l.value=e.job,c["profile-form"].resetValidation(),p.open()})),i.addEventListener("click",(function(){c["card-form"].resetValidation(),m.open()})),o.addEventListener("click",(function(){c["avatar-form"].resetValidation(),u.open()})),Promise.all([h.getUserInfo(),h.getCardInfo()]).then((e=>{let[t,s]=e;_.setUserInfo({name:t.name,about:t.about}),_.setAvatar(t.avatar),v.setItems(s),v.renderItems()})).catch((e=>console.error(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,